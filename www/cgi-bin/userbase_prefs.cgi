############################################################################
#
# userbase_prefs.cgi - user preferences file for UserBase.
# Edit the settings in this file to customize UserBase for your needs.
#
############################################################################
#
# NOTE: do not spend too much time customizing this trial version,
# because the full version replaces it completely.
# 
############################################################################



############################################################################
# Database settings: to get UserBase running, the one configuration item
# that you absolutely must adjust is the database settings.  The hostname
# may be left blank (which defaults to 'localhost') on many servers, but the
# other three settings -- database name, username, and password -- must be
# specified.
#
# The database user you specify must have these MySQL privileges:
# Select, Insert, Update, Delete, Create.
#
$PREF{database_hostname}				= '';
$PREF{database_name}					= '';
$PREF{database_username}				= '';
$PREF{database_password}				= '';
#
# The following settings usually don't need to be adjusted.  If you're
# using PostgreSQL instead of MySQL, then just make sure you have the
# DBD::Pg Perl module installed, then change the dbi_connection_string
# to "dbi:Pg:dbname=%%dbname%%".  Or if your mysql.sock file is in a
# non-standard location, you can specify that in the connection string:
#
#	dbi:mysql:%%dbname%%;mysql_socket=/var/mysql/mysql.sock
#
$PREF{dbi_connection_string}				= "dbi:mysql:%%dbname%%";
$PREF{user_table}					= 'userbase_trial_users';
$PREF{group_table}					= 'userbase_trial_groups';
$PREF{pwreset_table}					= 'userbase_trial_pwreset';
$PREF{custom_field_table}				= 'userbase_trial_custom_fields';
$PREF{paypal_ipn_table}					= 'userbase_trial_paypal_ipn';
$PREF{payments_table}					= 'userbase_trial_payments';
$PREF{logins_table}					= 'userbase_trial_logins';
$PREF{failed_logins_table}				= 'userbase_trial_failed_logins';
$PREF{password_activity_table}				= 'userbase_trial_password_activity';



############################################################################
# We'll detect your server's document-root automatically, but on some
# servers you may need to uncomment this and specify it manually.  IIS users
# may need to set it like this:
#
#	$PREF{DOCROOT} = 'c:\inetpub\wwwroot';
#
#$PREF{DOCROOT}						= $ENV{DOCUMENT_ROOT};



############################################################################
# If you're running an HTTPS server, and you want UserBase to always
# use secure links, change this to https://.  But note that this only
# affects links generated by UserBase itself; it doesn't prevent your
# users from typing http:// (without the "s") into their address bar.
# For that, you'll need to enable $PREF{force_https}.
# 
$PREF{protoprefix}					= 'http://';
$PREF{force_https}					= 'no';



############################################################################
# This is where UserBase stores any data files it needs to use.  It must
# be world-readable and world-writable, aka "chmod a+rwx" or "chmod 0777".
# On most servers this will be in the DOCROOT, in which case we'll prepend
# your DOCROOT to whatever you set datadir to.  If for some reason you want
# to specify it with an absolute path, or a path that's relative to the
# current directory instead of the DOCROOT, then set the  ...is_in_docroot
# PREF to no.
#
$PREF{datadir}						= 'encdata';
$PREF{datadir_is_in_docroot}				= 'no';



############################################################################
# Specify the URL to UserBase on your server. The default value is:
#
#	$PREF{login_url}		= $ENV{SCRIPT_NAME};
#
# If you have a short login URL set up on your server (see UserBase
# homepage for instructions), then use that instead:
#
#	$PREF{login_url}		= '/login/';
#
$PREF{login_url}					= $ENV{SCRIPT_NAME};
$PREF{here}						= $PREF{login_url}; # don't change this.



############################################################################
# This is where you install UserBase's images (icons, backgrounds, etc).
# It must be within your website's document root.  It must not end with
# a slash.
#
$PREF{image_path}					= '/login/images';



############################################################################
# If you want to password-protect pages on your site, but your server
# doesn't support PHP, or it supports PHP but has the PHP functions exec()
# and/or include() disabled, then you can protect your pages by putting them
# into the directory specified here.  See the following page for full
# instructions: 
#
#	http://encodable.com/userbase/#password-protect-without-php
#
$PREF{protected_pages_directory}			= '%PREF{DOCROOT}/protected-pages-go-here';



############################################################################
# Email options.  The email addresses specified here must be of the format
# 'foo@bar.com', or 'Your Name <foo@bar.com>', however some servers may have
# trouble with the latter format, preventing the script from sending its
# emails.
#
$PREF{webmaster_email_address}				= 'webmaster@example.com'; # recipient for admin approval of new signups, etc.
$PREF{login_script_email_address}			= 'userbase@example.com'; # sender.
$PREF{smtp_server}					= 'localhost:25'; # port is usually 25 or 587.
$PREF{path_to_sendmail}					= '/usr/sbin/sendmail';
$PREF{smtp_auth_username}				= '';
$PREF{smtp_auth_password}				= '';



############################################################################
# Specify title and options.
#
$PREF{title_for_page_body}				= 'UserBase';
$PREF{title_for_window_titlebar}			= 'UserBase';
$PREF{include_hostname_in_window_titlebar}		= 'yes';
$PREF{include_hostname_in_page_body_title}		= 'no';
$PREF{page_title_template}				= qq`<h1 class="pagetitle">%%title%%</h1>`;



############################################################################
# If you want your date/time values to be different than the date on your
# server, you can set an offset here.
#
$PREF{time_offset}					= -0; # in hours; can include negative sign.



############################################################################
# Set options for various permissible actions.
#
# The prefs that start with "groups_" must be lists of groupnames separated
# by spaces and/or commas.  In addition to your actual existing groupnames
# you can use the special groupnames "self", "public", and "member" here.
#
# The reserved groupname "self" indicates that permission should be granted
# if the user trying to perform the action is the same user who will be 
# affected by it -- for example each user should be allowed to modify their 
# own personal info (real name, email address, etc) but not the personal 
# info of other users.  Note that the "self" group does not apply to all
# actions.
#
# The special groupname "public" automatically includes all users, even
# those who do not have an account, i.e. any old internet passer-by.  You
# can change the name of this group, but if you do then you'll have to
# manually create the new group.
#
# The special groupname "member" automatically includes all users who do
# have an account in the system; it does NOT include strangers.  You
# can change the name of this group, but if you do then you'll have to
# manually create the new group.
#
# For each of the groups_allowed_to_action settings here, you can also 
# create a new setting called groups_not_allowed_to_action, which works
# the same way but in reverse: it explicitly disallows the action.
#
# In the settings below, "user" refers to any non-admin account.
#
# NOTE THAT THE DEFAULT SETTINGS ARE PROBABLY CORRECT FOR MOST SITUATIONS.
#
$PREF{groups_allowed_to_create_user_accounts}			= 'admin'; # but see next section for visitor sign-ups.
$PREF{groups_allowed_to_create_admin_accounts}			= 'admin';
$PREF{groups_allowed_to_create_groups}				= 'admin';
#
$PREF{groups_allowed_to_edit_user_info}				= 'admin,self';
$PREF{groups_allowed_to_edit_admin_info}			= 'admin';
$PREF{groups_allowed_to_edit_group_info}			= 'admin';
#
$PREF{groups_allowed_to_delete_user_accounts}			= 'admin';
$PREF{groups_allowed_to_delete_admin_accounts}			= 'admin';
$PREF{groups_allowed_to_delete_groups}				= 'admin';
#
$PREF{groups_allowed_to_import_accounts}			= 'admin';
$PREF{groups_allowed_to_add_custom_fields}			= 'admin';
$PREF{groups_allowed_to_change_group_memberships}		= 'admin';
$PREF{groups_allowed_to_manage_account_locks}			= 'admin';
$PREF{groups_allowed_to_force_password_changes}			= 'admin';
$PREF{groups_allowed_to_view_password_activity_log}		= 'admin';
$PREF{groups_allowed_to_edit_password_activity_log}		= 'admin';
$PREF{groups_allowed_to_delete_password_activity_log_records}	= 'admin';
#
$PREF{groups_allowed_to_view_all_accounts}			= 'admin';
$PREF{groups_allowed_to_view_all_groups}			= 'admin';
$PREF{groups_allowed_to_see_groups_on_user_form}		= 'admin';
$PREF{groups_allowed_to_see_full_grouplist_on_user_form}	= 'admin';
$PREF{groups_allowed_to_view_logins_log}			= 'admin';
$PREF{groups_allowed_to_edit_logins_log}			= 'admin';
$PREF{groups_allowed_to_delete_logins_log_records}		= 'admin';
$PREF{groups_allowed_to_view_failed_logins_log}			= 'admin';
$PREF{groups_allowed_to_edit_failed_logins_log}			= 'admin';
$PREF{groups_allowed_to_delete_failed_logins_log_records}	= 'admin';
#
$PREF{groups_allowed_to_edit_all_mainmenus}			= 'admin';
$PREF{groups_allowed_to_edit_admin_mainmenu}			= 'admin';
$PREF{groups_allowed_to_edit_member_mainmenu}			= 'admin';



############################################################################
# Choose whether visitors can sign up for their own accounts.  If so, you
# can also require email verification for new signups, and/or administrator
# approval for them.  Admin approval requires the $PREF{webmaster_email_address}
# setting (above) to be a valid email address of yours.
#
# If you don't want to let visitors sign up for their own accounts, you (as
# the administrator) can always create new accounts manually, through the
# "Manage Users" page, and then distribute the logins to your users yourself.
#
$PREF{visitors_can_sign_up_for_their_own_accounts}	= 'yes';
$PREF{require_email_verification_for_new_signups}	= 'yes';
$PREF{verification_email_format}			= ''; # 'html' or 'text'
$PREF{verification_email_subject}			= qq`Verify Your New Account on $ENV{HTTP_HOST}`;
$PREF{verification_email_template}			= qq`Hello,\n\nThanks for creating an account at $ENV{HTTP_HOST}.\n\nTo verify your email address, visit the following page:\n\n%%link%%\n\nThanks,\nThe Webmaster\n`;
$PREF{email_verified_pending_template}			= qq`<p>Thanks for verifying your email address.&nbsp; This site requires administrator approval for <br />new accounts, so your account will be activated if and when the administrator approves it.</p>\n`;
$PREF{email_verified_active_template}			= qq`<p>Thanks for verifying your email address.&nbsp; Your account is now active.</p><p>You can <a href="%%login_url%%">log in here.</a></p>\n`;
#
$PREF{user_must_agree_to_terms_on_signup}		= 'no';
$PREF{terms_unchecked_error_message}			= "You must check the Terms of Use checkbox to indicate your acceptance of the terms.";
#
$PREF{require_admin_approval_for_new_signups}		= 'yes';
$PREF{admin_approval_email_format}			= ''; # 'html' or 'text'
$PREF{admin_approval_email_subject}			= qq`New account '%%username%%' requires approval on $ENV{HTTP_HOST}`;
$PREF{admin_approval_email_template}			= qq`Hello,\n\nA new account named '%%username%%' has been created on $ENV{HTTP_HOST},\nand it requires your approval.\n\nVisit the following address to approve or delete this new account:\n\n%%approval_url%%\n\nSigned,\nYour UserBase Installation\n`;
$PREF{account_activated_email_subject}			= qq`Account activated on $ENV{HTTP_HOST}`;
$PREF{account_activated_email_template}			= qq`Hello,\n\nYour new account with username '%%username%%' has been approved and activated on $ENV{HTTP_HOST}.\n\nThanks,\nThe Webmaster\n`;
#
$PREF{notify_admin_of_new_signups}			= 'yes';
$PREF{admin_notification_email_format}			= ''; # 'html' or 'text'
$PREF{admin_notification_email_subject}			= qq`New account '%%username%%' created on $ENV{HTTP_HOST}`;
$PREF{admin_notification_email_template}		= qq`Hello,\n\nA new account has been created on $ENV{HTTP_HOST}.\nHere are the details:\n\n\n%%user_info_fields%%\nSigned,\nYour UserBase Installation\n`;
$PREF{admin_notification_email_field_template}		= qq`%%fieldname%%: %%fieldvalue%%\n\n`;
#
$PREF{send_welcome_email_when_admin_creates_an_account} = 'no';
$PREF{welcome_email_format}				= ''; # 'html' or 'text'
$PREF{welcome_email_subject}				= qq`Welcome to $ENV{HTTP_HOST}!`;
$PREF{welcome_email_template}				= qq`Hello,\n\nAn account has been created for you on $ENV{HTTP_HOST}.\n\nTo login to your account, use the following link, username, and password:\n\n$PREF{protoprefix}$ENV{HTTP_HOST}$PREF{login_url}\nUsername: %%username%%\nPassword: %%password%%\n\nThanks,\nThe Webmaster\n`;



############################################################################
# When someone visits your website and signs up for a new account, by
# default they aren't added to any groups, other than the special built-in
# groups "public" which everyone is a member of, and "members" which all
# users with accounts are members of.  If you've created other groups and
# you want new signups to automatically be added to them, you can specify
# those groups here, separated by commas.
#
$PREF{automatically_add_new_signups_to_these_groups}	= '';



############################################################################
# You can choose to offer paid accounts, which your visitors can sign up for
# and pay for via PayPal.  Note that a person does NOT need a PayPal account
# in order to make payments through PayPal; they just need a credit card or
# a bank account.
# 
# You can create as many types of paid accounts as you'd like.
#
# You can set the groupnames, descriptions, and costs to whatever you'd like,
# but you should NOT change the groupnames once there are members signed up
# in that level, or else you'll need to manually add those members to the
# new group via the Manage Users page.  Changes to the group descriptions
# here have no effect once that group has been created; instead, use the
# Manage Groups page to adjust the descriptions.
#
# The costs for these paid accounts are one-time costs.
#
$PREF{enable_paid_accounts}				= 'no';
$PREF{email_address_for_paypal_payments}		= 'me@my.com';
#
$PREF{paid_account_type_01_groupname}			= 'Silver';
$PREF{paid_account_type_01_groupdesc}			= 'Silver members enjoy the following benefits: foo, bar, baz...';
$PREF{paid_account_type_01_cost}			= '19.99';
$PREF{paid_account_type_01_paypal_item_name}		= 'Silver Member Account';
$PREF{paid_account_type_01_paypal_item_number}		= 'MBRACT101';
#
$PREF{paid_account_type_02_groupname}			= 'Gold';
$PREF{paid_account_type_02_groupdesc}			= 'Gold members enjoy the following benefits: bim, bap, bop...';
$PREF{paid_account_type_02_cost}			= '49.99';
$PREF{paid_account_type_02_paypal_item_name}		= 'Gold Member Account';
$PREF{paid_account_type_02_paypal_item_number}		= 'MBRACT102';
#
$PREF{paid_account_type_03_groupname}			= 'Platinum';
$PREF{paid_account_type_03_groupdesc}			= 'Platinum members enjoy the following benefits: power, fame...';
$PREF{paid_account_type_03_cost}			= '99.99';
$PREF{paid_account_type_03_paypal_item_name}		= 'Platinum Member Account';
$PREF{paid_account_type_03_paypal_item_number}		= 'MBRACT103';



############################################################################
# The confusingly-named groups_that_can_manage_subgroup_users option is for
# the situation where you want some non-admin users to be able to create and
# delete user accounts, but only if those accounts are members of a special
# group.
#
# To explain how this works, we'll refer to the non-admin users with the
# limited create/delete privileges as "subadmins".  So you would create a
# group called "subadmins" and then set this option like this:
#
#	$PREF{groups_that_can_manage_subgroup_users} = 'subadmins';
#
# Note that it doesn't *have* to be called "subadmins" and you can actually
# put multiple groups in there, separated by commas.  You just have to be
# sure to actually create the group via the UserBase Manage Groups page.
#
# Now let's say you have a user named Tom who you'd like to be a subadmin.
# You would of course simply add him to the subadmins group via the UserBase
# Manage Users page.
#
# That allows Tom to create user accounts, but the accounts he creates will
# always automatically get put into a special group named Tom_group.  And
# by the same token, Tom can delete user accounts, but only accounts which
# belong to the Tom_group group.
#
#	Note: do NOT add "subadmins" to the groups_allowed_to_create_new_accounts
#	setting; that would bypass this whole subadmin/subgroup feature and give
#	the group full create/delete account privileges.
#
# Any subadmins (like Tom in the example) cannot create admin accounts, and
# therefore cannot check the "admin" box under "Group Memberships" while
# editing accounts.
#
# You can specify a suffix other than "_group" (as in, Tom_group), but you
# probably shouldn't do that if you already have a bunch of subadmins and
# they already have a bunch of users, because then you'll have to go into
# the Manage Users page and manually update a bunch of users and groups.
#
$PREF{groups_that_can_manage_subgroup_users}		= '';
$PREF{subgroup_groupname_suffix}			= '_group';



############################################################################
# Set username and groupname options.
#
$PREF{allow_spaces_in_usernames}			= 'no';
$PREF{allow_atsigns_in_usernames}			= 'yes';
$PREF{allow_dots_in_usernames}				= 'yes';
$PREF{allow_dashes_in_usernames}			= 'yes';
$PREF{usernames_must_be_email_addresses}		= 'no';
#
$PREF{allow_spaces_in_groupnames}			= 'yes';
$PREF{allow_atsigns_in_groupnames}			= 'yes';
$PREF{allow_dots_in_groupnames}				= 'yes';
$PREF{allow_dashes_in_groupnames}			= 'yes';



############################################################################
# Set min/max lengths for strings.
#
$PREF{max_groupname_length}				= 50;
$PREF{max_username_length}				= 4;
$PREF{max_realname_length}				= 50;
$PREF{max_emailaddr_length}				= 90;
$PREF{max_password_length}				= 4;
$PREF{max_hashedpw_length}				= 50;
$PREF{max_group_description_length}			= 2000;
$PREF{min_password_length}				= 4;



############################################################################
# User info options.
#
$PREF{use_builtin_realname_field}			= 'yes';
$PREF{use_builtin_email_field}				= 'yes';
$PREF{email_field_required}				= 'yes';
$PREF{default_bgcolor_for_required_fields}		= '#ffffff';
$PREF{default_textcolor_for_required_fields}		= '#000';
$PREF{bgcolor_for_unfilled_required_fields}		= '#ffdd00';
$PREF{textcolor_for_unfilled_required_fields}		= '#000';



############################################################################
# You can choose to prevent a user from being logged in from 2 different
# locations (browsers) at the same time.  If you enable this, you should
# also enable the idle timeout, to prevent a user from locking himself out
# by accidentally staying logged in at another location.
#
# You can also set an idle timeout that automatically expires the user's
# login session (i.e. automatically logs him out) after a certain number of
# idle seconds.  Set the timeout to zero to disable it.
#
# The "Remember Me" checkbox is approximately an inverse of the idle
# timeout: instead of automatically logging the user out after a period of
# inactivity, we automatically remember the user for X number of days, even
# if they close their browser, reboot their computer, etc.
#
$PREF{prevent_multiple_simultaneous_logons_per_username}= 'no';
$PREF{idle_timeout}					= 60 * 0; # in seconds.



############################################################################
# Various security options.
#
$PREF{num_seconds_to_sleep_on_failed_login}		= 1;
$PREF{lock_account_after_N_failed_logins}		= 5; # null to disable.
$PREF{failed_logins_within_N_secs_count_towards_lock}	= 600; # null to disable (then all failures count).
$PREF{lock_expires_automatically}			= 'yes';
$PREF{enable_ip_address_restriction}			= 'yes';
$PREF{force_ip_address_restriction}			= 'yes';
$PREF{enable_password_reset}				= 'yes';
$PREF{pwreset_should_lie_about_nonexistent_accounts}	= 'yes'; # For security purposes, don't print "username not found"; just act like it was found.
$PREF{prevent_pw_reuse_for_this_many_pw_changes}	= 0;
$PREF{passwords_must_contain_a_lowercase_letter}	= 'no';
$PREF{passwords_must_contain_an_uppercase_letter}	= 'no';
$PREF{passwords_must_contain_a_number}			= 'no';
$PREF{passwords_must_contain_a_nonalphanumeric_char}	= 'no';
$PREF{list_of_sql_safe_characters}			= qq`ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789 !#%^&*()_=+ ~ []{}| ;:'" ,.<>/? \`\@\$\r\n\t\\-`; # dash, if present, must be last.



############################################################################
# You can use a blacklist or a whitelist to prevent users from accessing the
# app.  A blacklist means "block this user" and a whitelist means "block
# EVERY user except this one", so in most cases you should use a blacklist
# instead of a whitelist.  If you specify both, then only the whitelist will
# be used, since it's the more restrictive of the two.
#
# These values are regular expressions, which means that some characters
# have special meanings (like dots) so they must be "escaped" using a back-
# slash, and that partial matching will be done unless you use "^" and "$"
# to mark the start and end of the value.  For example, if you want to match
# only the exact IP address 12.34.56.78, you would use the following:
#
#	$PREF{blacklisted_ip_addresses}{'01'} = '^12\.34\.56\.78$';
#
# Or if you want to match any IP that starts with 12.34., you'd use this:
#
#	$PREF{blacklisted_ip_addresses}{'01'} = '^12\.34\.';
#
# Or to match any IP that contains .34.56., you'd use this:
#
#	$PREF{blacklisted_ip_addresses}{'01'} = '\.34\.56\.';
#
# Note that the values here must be in single-quotes, not double-quotes.
#
# You can add as many rules as you want; just increment the number in '01',
# '02', etc.
#
$PREF{blacklisted_ip_addresses}{'01'}			= '';
$PREF{blacklisted_ip_addresses}{'02'}			= '';
$PREF{blacklisted_hostnames}{'01'}			= '';
$PREF{blacklisted_hostnames}{'02'}			= '';
#
$PREF{whitelisted_ip_addresses}{'01'}			= '';
$PREF{whitelisted_ip_addresses}{'02'}			= '';
$PREF{whitelisted_hostnames}{'01'}			= '';
$PREF{whitelisted_hostnames}{'02'}			= '';
#
$TEXT{failed_black_or_white_list}			= qq`Access denied based on blacklisted or whitelisted IP address or hostname.`;



############################################################################
# Using binary salt can increase security, but not all servers will support
# it.  If you enable this, you'll need to manually change the type of your
# salt column from VARCHAR to VARBINARY, using phpMyAdmin or some other
# interface to MySQL.  For example in the MySQL command-line client you
# would use this command:
#
#	ALTER TABLE `userbase_users` MODIFY `salt` VARBINARY(50) NOT NULL;
#
$PREF{use_binary_salt}					= 'no';



############################################################################
# Configure the force-password-change feature.
#
$PREF{enable_forced_password_change}			= 'yes';
$PREF{admins_can_be_forced_to_change_their_own_pws}	= 'yes';
$PREF{force_pw_chng_after_first_login}			= 'no';
$PREF{force_pw_chng_after_password_reset}		= 'yes';
$PREF{force_pw_chng_after_this_many_hours}		= 24*0; # zero to disable.



############################################################################
# FileChucker options.  Note that FileChucker will automatically create each
# user's userdir when that user first logs in.  You only need to enable the 
# create_filechucker_userdir_on_account_creation setting if you need to have
# each userdir be created when the user's account is created, instead of
# when the user first logs in.
#
$PREF{create_filechucker_userdir_on_account_creation}	= 'no';
$PREF{filechucker_userdir_folder}			= '/upload/files/users';
$PREF{filechucker_userdir_folder_is_in_docroot}		= 'yes';



############################################################################
# If you're embedding UserBase into an existing layout, then you probably
# don't want UB to print out full HTML tags.  So you can disable that here.
# In that case you must also put the following lines into the <head> section 
# of your website:
#
#	<script type="text/javascript" src="/cgi-bin/userbase.cgi?js"></script>
#	<link rel="stylesheet" type="text/css" media="all" href="/cgi-bin/userbase.cgi?css">
#
# Note that the CSS output may have conditional comments at the bottom that
# you'll need to copy directly into the <head> section of your site.
#
# If you are not going to use print_full_html_tags, then ideally you'll be
# calling UserBase from a file like /login/index.shtml that contains
# something pretty similar to this:
#
#	<!--#include virtual="/header.shtml" -->
#	<!--#include virtual="/cgi-bin/userbase.cgi?$QUERY_STRING" -->
#	<!--#include virtual="/footer.shtml" -->
#
# ...where header.shtml and footer.shtml contain your site-wide standard
# HTML code that each page is wrapped in.  Or, if your header/footer are
# in PHP, then your /login/index.php might look like this:
#
#	<? virtual("/header.php"); ?>
#	<? virtual("/cgi-bin/userbase.cgi?" . $_SERVER['QUERY_STRING']); ?>
#	<? virtual("/footer.php"); ?>
#
# However, if you are on a brain-dead server (for example, IIS6+) which
# does not support any decent way to call a CGI script that includes the
# proper server environment variables, and your server does not have PHP
# installed, and you still want to include a standard header/footer with
# UserBase, then you can set encodable_app_template_file.  Set this to
# the full path (probably starting with "%PREF{DOCROOT}/") to an HTML page
# on your site which should be used as the template for UserBase's
# output.  You can create this HTML file in whatever way you normally
# create web pages; the only requirements are that it contain the string
# %%encodable_app_output%% wherever you'd like UserBase's output to
# appear, and that you put the strings %%css%% and %%js%% within the
# <head> section of the file.  No server-side processing (PHP, SSI, etc)
# will be done on the contents of this file; however you can specify a 
# title within it by inserting the string %%title%% (for example, as in
# <title>%%title%%</title>) and we'll replace that with your value for
# the title_for_template_file variable (or in some cases, with an
# internally-set title).
#
$PREF{print_full_html_tags}				= 'yes';
$PREF{encodable_app_template_file}			= '';
$PREF{title_for_template_file}				= '';



############################################################################
# Web servers treat "www.you.com" and "you.com" as two different domains,
# which matters for web applications that use cookies.  So you should make
# your website either always use the www, or always remove it.  You should
# be able to do this in your server configuration, but if not, you can do
# it here.  Whether to use www or not is only a matter of taste, so just 
# pick whichever way you want, and then stick with it.
#
$PREF{add_www_to_hostname}				= 'no';
$PREF{remove_www_from_hostname}				= 'no';



############################################################################
# Directory permissions: these should usually be 0777; on some servers, you
# may be able to get away with using less-permissive settings like 0755 or
# even 0700 instead.
#
# File permissions: these should usually be 0666; on some servers, you
# may be able to get away with using less-permissive settings like 0644 or
# even 0600 instead.
#
$PREF{writable_dir_perms}				= 0777;		# no quotes. default is 0777.
#
$PREF{writable_file_perms}				= 0666;		# no quotes. default is 0666.



############################################################################
# Various templates and markup.
#
# The PREF for loggedout_page_template__with_referer is used when a user
# clicks a "logout" link on some other page; we then display this message
# with a link to return to that other page (the referer).  Otherwise we
# just display the __no_referer message.
#
$PREF{username_label}					= 'Username';
$PREF{name_label}					= 'Real Name';
$PREF{email_label}					= 'Email Address';
$PREF{date_format_for_users_page}			= '%Y%m%d-%H%M';
$PREF{mainmenu_page_template}				= qq`%%menus%%`;
$PREF{mainmenu_template}				= qq`<div class="encmenu">\n<div class="header"><span class="altcolor1">&gt;</span> %%title%%</div>\n<div>%%links%%</div></div>\n`;
#
$PREF{success_message_template}				= qq`<h2>Success</h2>\n<p>%%message%%</p>\n`;
$PREF{notice_message_template}				= qq`<h2>Notice</h2>\n<p>%%message%%</p>\n`;
$PREF{error_message_template}				= qq`<h2>Error</h2>\n<p>%%message%%</p>\n`;
$PREF{outer_container}					= '<div id="ubbody" %%class%%>';
$PREF{outer_container_end}				= '</div>';
$PREF{forced_logout_link}				= qq`<script type="text/javascript">location.href="%%logout_url%%";</script><p>Logging out; <a href="%%logout_url%%">click here</a> if you see this message for more than a few seconds.</p>\n`;
$PREF{loggedout_page_template__no_referer}		= qq`You are logged out.`;
$PREF{loggedout_page_template__with_referer}		= qq`<p>You are logged out.&nbsp; <a href="%%ref%%">Click here</a> to return to the page you came from.</p>`;
$PREF{login_status_string_template}			= qq`[ %%usertype%% %%username%% logged in%%extra_info%%. ]`;
$PREF{needlogin_message}				= qq`<h1 class="pagetitle">Login Required</h1><p>Login required; <a href="%%login_url%%">click here</a> to continue.</p>`;
$PREF{needprivs_message}				= qq`<h1 class="pagetitle">Access Denied</h1><p>Access denied.&nbsp; %%%if-notloggedin%%%Perhaps you need to <a href="%%login_url%%">login</a> first?%%%end-notloggedin%%%</p>`;



############################################################################
# These prefs allow you to create a fully customized main menu page.  Just
# specify the filename (including full path, or path relative to your
# DOCROOT) to the HTML file containing your main menu.  You should not
# include the HTML tags <html>, <head>, nor <body>, nor their close-tags,
# within your file, unless you enable the hide_ prefs here.
#
# Within your page, you must use the following code to tell UserBase which
# groups should see which parts of your page:
#
#	<!-- %%%group-member%%% -->
#	(your members-only code here)
#	<!-- %%%end-group-member%%% -->
#
#	...
#
#	<!-- %%%group-admin%%% -->
#	(your admin-only code here)
#	<!-- %%%end-group-admin%%% -->
#
$PREF{custom_mainmenu_page}				= '';
$PREF{hide_builtin_header_on_custom_mainmenu}		= 'no';
$PREF{hide_builtin_footer_on_custom_mainmenu}		= 'no';



############################################################################
# Specify the name and address of the "Home" link in the footer.  You can
# also configure other footer options here.
#
$PREF{home_link_name}					= 'Home';
$PREF{home_link_url}					= '/';
$PREF{signup_link_name}					= 'Create Account';
$PREF{signup_link_url}					= '%PREF{login_url}?action=signup';
$PREF{show_login_status_in_footer}			= 'yes';
$PREF{show_myaccount_link_in_footer}			= 'yes';
$PREF{myaccount_footer_link_name}			= 'My Account';



############################################################################
# The Manage Users page contains a table that may be too wide for some
# narrow layouts.  To work around that, you can specify that certain columns
# should be hidden by default.  They can always be manually displayed by
# simply clicking on the appropriate link on the Manage Users page.  The
# column names are ubusername, ubgroups, ubrealname, ubemail, ubcreatedate,
# ubloggedin, ubactions, and also the names of any custom fields that you've
# created.  You can specify one or more here, separated by commas.
#
$PREF{columns_hidden_by_default_on_user_manager}	= 'ubcreatedate,ubloggedin,ublastlogin,ublastactive';



############################################################################
# By default, upon successful login, we either:
#
#	a) send the user back to the page they came from, if they accessed
#	   this script by clicking some kind of "Login" link on another
#	   page; or:
#
#	b) display a default UserBase landing page showing the links you
#	   specify (see above), if the user accessed the script directly.
#
# Similarly, upon logout, we either:
#	
#	a) send the user back to the page they came from, if they accessed
#	   this script by clicking a "Logout" link on another page; or:
#
#	b) display the default UserBase login form, if the user accessed
#	   the script directly.
#
# However, you can override this behavior here.  Specify the URL to go to
# for each situation.  Each URL can be a relative link (starting with a 
# single forward-slash), or can start with a fully-qualified domain name,
# i.e. starting with http:// or https://.
#
# You can also specify that when a user visits the script, even if he's not
# in the process of logging in or logging out, we'll still redirect him to
# a different URL.  To enable this, set the "always_redirect" PREFs.
#
# Note that you can include %%username%% as a variable in these URLs, to
# insert the visitor's username, sending each user to a unique URL.  And
# you can create new prefs here of the form on_groupname_login_redirect_to,
# where "groupname" is the name of any group that you've created.
#
# You can also set any of these to "referer", in which case we'll redirect
# the user to the referring page -- the page he came from.  In this case
# you must also set a backup address in case the user visits us directly,
# i.e. no referer is set.
#
$PREF{on_member_login_redirect_to}			= '';
$PREF{on_member_logout_redirect_to}			= '';

$PREF{on_admin_login_redirect_to}			= '';
$PREF{on_admin_logout_redirect_to}			= '';

$PREF{on_failed_login_redirect_to}			= '';

$PREF{always_redirect_members_to}			= '';
$PREF{always_redirect_admins_to}			= '';

$PREF{redirection_backup_address}			= '/';



############################################################################
# Settings for the logins logs.
#
$PREF{logins_viewer_title}				= 'Logins';
$PREF{logins_viewer_template}				= qq`\n<p>[ %%horizlink:text=Horizontal%% | %%vertlink:text=Vertical%% %%%if-viewall%%% | %%viewalllink:text=View All%% %%%end-viewall%%% ]</p>\n<p>%%pagelinks%%</p>\n\n<br />\n%%output%%\n<p>%%pagelinks%%</p>\n`;
$PREF{logins_viewer_hidden_columns}			= 'id,session_id,ip_address,user_id,timestamp';
$PREF{logins_viewer_disabled_columns}			= '';
$PREF{logins_viewer_max_display_length}			= 50;
$PREF{logins_viewer_itemsperpage}			= 25;
$PREF{num_logins_to_log_per_user}			= 10;
#
$PREF{failed_logins_viewer_title}			= 'Failed Logins';
$PREF{failed_logins_viewer_template}			= qq`\n<p>[ %%horizlink:text=Horizontal%% | %%vertlink:text=Vertical%% %%%if-viewall%%% | %%viewalllink:text=View All%% %%%end-viewall%%% ]</p>\n<p>%%pagelinks%%</p>\n\n<br />\n%%output%%\n<p>%%pagelinks%%</p>\n`;
$PREF{failed_logins_viewer_hidden_columns}		= 'id,password_fingerprint,ip_address,timestamp';
$PREF{failed_logins_viewer_disabled_columns}		= '';
$PREF{failed_logins_viewer_max_display_length}		= 50;
$PREF{failed_logins_viewer_itemsperpage}		= 25;
$PREF{num_failed_logins_to_log_per_user}		= 100;
#
$PREF{password_activity_viewer_title}			= 'Password Updates';
$PREF{password_activity_viewer_template}		= qq`\n<p>[ %%horizlink:text=Horizontal%% | %%vertlink:text=Vertical%% %%%if-viewall%%% | %%viewalllink:text=View All%% %%%end-viewall%%% ]</p>\n<p>%%pagelinks%%</p>\n\n<br />\n%%output%%\n<p>%%pagelinks%%</p>\n`;
$PREF{password_activity_viewer_hidden_columns}		= 'id,user_id,ip_address,timestamp,user_who_did_update,salt';
$PREF{password_activity_viewer_disabled_columns}	= '';
$PREF{password_activity_viewer_max_display_length}	= 50;
$PREF{password_activity_viewer_itemsperpage}		= 25;
$PREF{num_pw_updates_to_log_per_user}			= 10;




############################################################################
# Customizable messages.
#
$PREF{invalid_username_message}				= qq`Username invalid: must contain only letters, numbers, and underscores; and must be less than $PREF{max_username_length} characters.`;
$PREF{invalid_realname_message}				= qq`Realname invalid: must contain only letters, numbers, spaces, dots, dashes, and quotes; must start with a letter; and must be less than $PREF{max_realname_length} characters.`;
$PREF{invalid_password_message}				= qq`Password invalid: must be between $PREF{min_password_length} and $PREF{max_password_length} characters.`;
$PREF{invalid_groupname_message}			= qq`Groupname invalid: must contain only letters, numbers, and underscores; must start with a letter; and must be less than $PREF{max_groupname_length} characters.`;
$PREF{invalid_groupdesc_message}			= qq`Group description invalid: must be less than $PREF{max_group_description_length} characters.`;



############################################################################
# Internationalization and Localization (i18n and l10n).
#
$TEXT{messages}{ebadauth}				= qq`Invalid login; please go back and try again.`;
$TEXT{messages}{eacctlck}				= qq`Error: account locked.\n`;
$TEXT{messages}{eacctdis}				= qq`Error: account disabled.\n`;
$TEXT{messages}{eacctpnd}				= qq`Error: account still pending.\n`;
$TEXT{messages}{edupuser}				= qq`Sorry, a user by that name already exists.&nbsp; Please go back and try again.`;
$TEXT{messages}{edupemail}				= qq`Sorry, that email address already exists in the system.&nbsp; Please try again.`;
$TEXT{messages}{emultlogin}				= qq`That account is already logged in, and multiple simultaneous logins are not allowed.`;
$TEXT{messages}{einsuff}				= qq`You don't have permission to do that.`;
$TEXT{messages}{eneedlogin}				= qq`You must log in to use this facility.`;
$TEXT{messages}{eneedadmin}				= qq`You must log in as an administrator to use this facility.`;
$TEXT{messages}{epwmismatch}				= qq`Passwords do not match.&nbsp; Go back and try again.`;
$TEXT{messages}{ebadname}				= qq`$PREF{invalid_username_message}`;
$TEXT{messages}{ebadopwuid}				= qq`Old password incorrect or username/ID mismatch. Please go back and try again.`;
$TEXT{messages}{enpwmis}				= qq`New passwords do not match. Please go back and try again.`;
$TEXT{messages}{enpwl}					= qq`New password too short. Please go back and try again.`;
$TEXT{messages}{einvldr}				= qq`$PREF{invalid_realname_message}`;
$TEXT{messages}{einvlde}				= qq`Email address invalid.&nbsp; Must match the normal user\@domain.com pattern and must not contain spaces`;
$TEXT{messages}{einvldp}				= qq`$PREF{invalid_password_message}`;
$TEXT{messages}{einvldh}				= qq`Hashed password invalid; please contact the webmaster.`;
$TEXT{messages}{einvldgn}				= qq`$PREF{invalid_groupname_message}`;
$TEXT{messages}{einvldgd}				= qq`$PREF{invalid_groupdesc_message}`;
$TEXT{messages}{egrprsvd}				= qq`That groupname is reserved; please go back and change it.`;
$TEXT{messages}{egrpexist}				= qq`That groupname already exists; please go back and change it.`;
$TEXT{messages}{epwrst2}				= qq`Error: email address invalid or nonexistent.&nbsp; Please contact us to have your password reset.`;
$TEXT{messages}{epwrst3}				= qq`Error: account does not exist.`;
$TEXT{messages}{enosignup}				= qq`New account sign-ups are disabled.`;
$TEXT{messages}{sactapp}				= qq`New account '%%username%%' pending administrator approval.`;
$TEXT{messages}{sactvrf}				= qq`New account '%%username%%' pending email verification; please check your email.`;
$TEXT{messages}{snewadd}				= qq`New account '%%username%%' created successfully.`;
$TEXT{messages}{spwrst2}				= qq`Your password reset email has been sent.&nbsp; You must follow the instructions in the email to reset your password.`;

$TEXT{Access_denied_}						= qq`Access denied.`;
$TEXT{Add_Custom_Field}						= qq`Add Custom Field`;
$TEXT{Add_New_Field}						= qq`Add New Field`;
$TEXT{Add_User}							= qq`Add User`;
$TEXT{Are_you_sure_you_want_to_delete_user}			= qq`Are you sure you want to delete user`;

$TEXT{boolean_false_string}					= 'no';
$TEXT{boolean_true_string}					= 'yes';

$TEXT{Create_Account}						= qq`Create Account`;
$TEXT{Custom_Fields}						= qq`Custom Fields`;

$TEXT{database_create_button}					= qq`Add new %%itemname%%`;
$TEXT{database_create_button_2}					= qq`Save new %%itemname%%`;
$TEXT{database_delete_successful}				= qq`Successfully deleted the %%itemname%%.`;
$TEXT{database_deleter_title}					= qq`Or you can delete this %%itemname%%:`;
$TEXT{database_deleter_checkbox}				= qq`Check this box to confirm that you want to delete the %%itemname%%.`;
$TEXT{database_deleter_button}					= qq`Delete this %%itemname%%`;
$TEXT{database_save_button}					= qq`Save changes`;
$TEXT{Delete}							= qq`Delete`;

$TEXT{Edit}							= qq`Edit`;
$TEXT{Edit_Custom_Field}					= qq`Edit Custom Field`;
$TEXT{Edit_mainmenu}						= qq`Edit Mainmenu`;
$TEXT{Edit_My_Account_Information}				= qq`Edit My Account Information`;
$TEXT{Edit_This_Menu}						= qq`Edit This Menu`;
$TEXT{empty_password_error}					= qq`You must enter your password.`;
$TEXT{empty_username_error}					= qq`You must enter your username.`;
$TEXT{Error}							= qq`Error`;



$TEXT{Entry_not_bool}						= qq`The value for %%item%% must be either null or else "on"; "%%value%%" is invalid.`;
$TEXT{Entry_not_float}						= qq`The value for %%item%% must be a decimal/fractional number; "%%value%%" is invalid.`;
$TEXT{Entry_not_int}						= qq`The value for %%item%% must be a whole number; "%%value%%" is invalid.`;
$TEXT{Entry_not_ufloat}						= qq`The value for %%item%% must be a non-negative decimal/fractional number; "%%value%%" is invalid.`;
$TEXT{Entry_not_uint}						= qq`The value for %%item%% must be a non-negative whole number; "%%value%%" is invalid.`;
$TEXT{Entry_invalid}						= qq`Invalid entry for %%item%% ("%%value%%").`;

$TEXT{e_fldname}						= qq`Error: Field name must contain only letters, numbers, and underscores, and must be 100 characters or less.`;
$TEXT{e_sqlsafe}						= qq`Error: Field contains non-SQL-safe characters: %%fieldname%%\n<br />SQL-safe characters: %PREF{list_of_sql_safe_characters}`;
$TEXT{e_bltfld}							= qq`Error: That field name is reserved.`;
$TEXT{e_fldexist}						= qq`Error: That field name already exists.`;
$TEXT{e_fldlabel}						= qq`Error: Field label must be between 1 and 255 characters.`;
$TEXT{e_datatype}						= qq`Error: Data type must contain only letters, numbers, and underscores, and must be 100 characters or less.`;
$TEXT{e_fieldtype}						= qq`Error: Field type must contain only letters, numbers, and underscores, and must be 100 characters or less.`;
$TEXT{e_fieldpos}						= qq`Error: Field position must contain only numbers (or can be left blank initially)`;
$TEXT{e_alchrmsg}						= qq`Error: Allowed characters message must be less than 255 characters.`;
$TEXT{e_listitems}						= qq`Error: For dropdown and radio fields, you must enter a list of items/options for the field.`;
$TEXT{e_mandatory}						= qq`The %%item%% field is mandatory.`;
$TEXT{e_toolong}						= qq`Your entry for "%%item%%" was %%length%% characters long, but the limit is %%limit%% characters.`;



$TEXT{Field_contains_non_SQL_safe_characters}			= qq`Field contains non-SQL-safe characters`;

$TEXT{item}							= qq`item`;
$TEXT{items}							= qq`items`;

$TEXT{Main_Menu}						= qq`Main Menu`;
$TEXT{Manage_Users}						= qq`Manage Users`;
$TEXT{Modify_User}						= qq`Modify User`;
$TEXT{Must_pass_group_id_}					= qq`Must pass group ID on URL.`;

$TEXT{New_Password_}						= qq`New Password:`;
$TEXT{New_Password_again_}					= qq`New Password, again:`;
$TEXT{no_output_from_database}					= qq`<div style="text-align: center; font-style: italic;">(none)</div>`;

$TEXT{page}							= qq`page`;
$TEXT{pages}							= qq`pages`;
$TEXT{Password_}						= qq`Password:`;
$TEXT{Password_again_}						= qq`Password, again:`;
$TEXT{password_reuse_error}					= qq`Error: you've used that same password recently; for security purposes, you must choose a different password.`;
$TEXT{Password_too_long__the_maximum_}				= qq`Password too long; the maximum length is`;
$TEXT{Password_too_short__the_minimum_}				= qq`Password too short; the minimum length is`;
$TEXT{password_updater_special_cases}				= qq`(initial account creation or password reset)`;
$TEXT{Passwords_do_not_match_}					= qq`Passwords do not match.`;
$TEXT{Please_login_first_}					= qq`Please login first.`;

$TEXT{Reset_Password}						= qq`Reset Password`;

$TEXT{Save_Changes}						= qq`Save Changes`;
$TEXT{Sign_Up}							= qq`Sign Up`;
$TEXT{SQL_safe_characters}					= qq`SQL-safe characters`;

$TEXT{This_feature_is_disabled_}				= qq`This feature is disabled.`;






############################################################################
# Here you can add/edit CSS (styling) for UserBase.
#
$PREF{css} = qq`
#ubbody, #ubbody table { font: 8pt sans-serif; color: #575757; text-align: center; }
#ubbody a { color: #507090; text-decoration: none; }
#ubbody a:hover { color: #a0a0a0; text-decoration: underline; }

#container { margin-left: auto; margin-right: auto; text-align: center; }
.ubfooter { width: 100%; text-align: center; margin: 6px auto; padding: 6px 0; }
#ubfooterstart { margin-top: 15px; padding-top: 15px; }
.ubloggedinname { text-align: center; margin: 0 auto 15px auto; }
.ubpower { margin-top: 10px; }
a.enclink { font-size: 90%; }
.userinfoleft { width: 48%; float: left; text-align: left; }
.userinforight { width: 48%; float: right; text-align: right; }
.label { font-weight: bold; }
.label p { max-width: 200px; }
#ubbody input.default		{ margin: 4px; border: 1px solid #777; padding: 3px; }
#ubbody textarea.default	{ margin: 4px; border: 1px solid #777; padding: 3px; }
#ubbody select.default		{ margin: 4px; border: 1px solid #777; padding: 1px; }
#ubbody input.text { width: 120px; }
#ubbody textarea.default { width: 300px; height: 150px; }

#userform table { border: 1px solid #777; border-collapse: collapse; margin: 10px auto; color: #575757; text-align: left; }
#userform th { background: #507090; color: #fff; padding: 12px; font: bold 8pt sans-serif; text-align: center; }
#userform .groups { text-align: left; cursor: default; }
#userform td.ubbutton { text-align: center; vertical-align: middle; }
#userform td { padding: 7px; }
#userform tr { background: #e9e9e9; }
#userform tr:hover { background: #d5d9d3; color: #575757; border: 0; }
#userform tr:hover a { color: #575757; text-decoration: underline; }
#userform tr:hover a:hover { color: #000; background: transparent; }
#userform td.paidaccts { width: 200px; }
#userform input.text { width: 180px; }


#ubbody .groupform { border: 1px solid #777; border-collapse: collapse; margin: 10px auto; color: #575757; text-align: left; }
#ubbody .groupform th { background: #507090; color: #fff; padding: 12px; font: bold 8pt sans-serif; text-align: center; }
#ubbody .groupform .groups { text-align: left; cursor: default; }
#ubbody .groupform td.ubbutton { text-align: center; vertical-align: middle; }
#ubbody .groupform td { padding: 7px; text-align: left; }
#ubbody .groupform tr { background: #e9e9e9; }
#ubbody .groupform tr:hover { background: #d5d9d3; color: #575757; border: 0; }
#ubbody .groupform tr:hover a { color: #575757; text-decoration: underline; }
#ubbody .groupform tr:hover a:hover { color: #000; background: transparent; }

#ubbody .custfields { border: 1px solid #777; border-collapse: collapse; margin: 10px auto; color: #575757; text-align: left; }
#ubbody .custfields th { background: #507090; color: #fff; padding: 12px; font: bold 8pt sans-serif; text-align: center; }
#ubbody .custfields .groups { text-align: left; cursor: default; }
#ubbody .custfields td.ubbutton { text-align: center; vertical-align: middle; }
#ubbody .custfields td { padding: 7px; text-align: left; }
#ubbody .custfields tr { background: #e9e9e9; }
#ubbody .custfields tr:hover { background: #d5d9d3; color: #575757; border: 0; }
#ubbody .custfields tr:hover a { color: #575757; text-decoration: underline; }
#ubbody .custfields tr:hover a:hover { color: #000; background: transparent; }

#customfieldform .label { width: 200px; }
#customfieldform .notes { font-weight: normal; }
#customfieldform .warning { font-weight: bold; }



/* login form styles: */

#ubbody .origstyle table { width: 200px; border: 1px solid #777; margin: 0 auto; border-collapse: collapse; color: #575757; text-align: left; }
#ubbody .origstyle .graytitle { display: none; }
#ubbody .origstyle th { background: #507090; color: #fff; padding: 12px; font: bold 8pt sans-serif; text-align: center; }
#ubbody .origstyle th { font: bold 8pt sans-serif; }
#ubbody .origstyle td { white-space: nowrap; padding: 7px; text-align: left; }
#ubbody .origstyle td.label { padding-right: 2px; }
#ubbody .origstyle tr { background: #e9e9e9; }
#ubbody .origstyle tr:hover { background: #d5d9d3; }
#ubbody .origstyle td.ubbutton { text-align: center; vertical-align: middle; }


#ubbody .graystyle table { width: 200px; background: #e5e5e5 url($PREF{image_path}/gray-grad-a-200px.png) top left repeat-x; color: #444; border: 1px solid #bbb; border-collapse: collapse; margin: 10px auto; text-align: left; }
#ubbody .graystyle th { padding: 8px; } 
#ubbody .graystyle .graytitle { position: relative; height: 18px; border-bottom: 1px solid #999; } 
#ubbody .graystyle .origtitle { display: none; }
#ubbody .graystyle .formtitle { font: bold 8pt sans-serif; color: #000; position: absolute; left: 0; top: 0; }
#ubbody .graystyle .formsubtitle { font: 8pt sans-serif; color: #999; position: absolute; right: 0; top: 0; }
#ubbody .graystyle td { white-space: nowrap; padding: 4px; text-align: left; }
#ubbody .graystyle input.text { width: 95px; }
#ubbody .graystyle td.label { padding-right: 2px; padding-left: 10px; font-weight: normal; }
#ubbody .graystyle td.field { padding-left: 2px; }
#ubbody .graystyle td.ubbutton { text-align: center; vertical-align: middle; padding: 5px; }


#ubbody .shadstyle { position: relative; width: 230px; margin: 0 auto; padding: 12px; z-index: 3; }
#ubbody .shadstyle table { width: 100%; border: 1px solid #888; border-collapse: collapse; color: #575757; text-align: left; }
#ubbody .shadstyle .graytitle { display: none; }
#ubbody .shadstyle th { background: #e0e0e0; color: #333; padding: 8px; font: bold 8pt sans-serif; text-align: center; }
#ubbody .shadstyle th { font: bold 9pt Verdana,sans-serif; border-bottom: 1px solid #999; }
#ubbody .shadstyle td { white-space: nowrap; padding: 7px; text-align: left; }
#ubbody .shadstyle td.label { padding-right: 2px; }
#ubbody .shadstyle td.field { text-align: right; }
#ubbody .shadstyle tr { background: #fff; }
#ubbody .shadstyle tr:hover { background: #efefef; }
#ubbody .shadstyle td.ubbutton { text-align: center; vertical-align: middle; }
#ubbody .shadstyle .altcolor1 { color: #333; display: none; }
#ubbody .shadstyle .altcolor2 { color: #333; }



#ubbody .listug { border: 1px solid #777; margin: 10px auto; color: #444; text-align: center; }
#ubbody .listug table { border-collapse: collapse; width: 100%; font-size: 8pt; }
#ubbody .listug th { background: #507090; color: #fff; padding: 9px; }
#ubbody .listug td { padding: 7px; }
#ubbody .listug tr.odd { background: #efefef; }
#ubbody .listug tr.even { background: #e9e9e9; }
#ubbody .listug .desc { text-align: left; }
#ubbody .listug tr:hover { background: #d5d9d3; color: #575757; border: 0; }
#ubbody .listug tr:hover td a { color: #575757; text-decoration: underline; }
#ubbody .listug tr:hover td a:hover { color: #000; background: transparent; }
#ubbody .listug tr { border-bottom: 1px solid #fff; }


#ubbody .listug a, #ubbody .listug a:visited { color: #000; border: 0; }
#ubbody .listug .pending a, #ubbody .listug .pending a:visited { color: #999; border: 0; }
#ubbody .listug th a, #ubbody .listug th a:visited { color: #fff; }
#ubbody .listug tr { }
#ubbody .listug-letters { font-size: 120%; font-weight: bold; text-align: center; }
#ubbody .listug-letters a { padding: 4px; color: #507090; border: 0; }
#ubbody .listug-letters a:hover { background: #507090; color: #fff; text-decoration: none; border: 0; }
#ubbody .listug-letters a.current { text-decoration: underline; }

#payment-page { width: 40%; margin: 20px auto; padding: 2px; background: #efefef; color: #000; }
#payment-page div { margin: 0 auto; padding: 15px; }

#showusers tr.pending { color: #999; }
.table-footer-info { font-style: italic; margin: 0 auto 20px auto; }

.def { border-bottom: 1px dotted; }

.altcolor1 { color: #ffd200; }
.altcolor2 { color: #d0d0d0; }

#formmessage
{
	border: 1px solid #000;
	background: #ffff00;
	width: 400px;
	margin: 10px auto;
	padding: 5px;
	text-align: left;
}

.shadstyle .shad01 { background: url($PREF{image_path}/shad01c.png); top: 0; left: 0; width: 100%; height: 12px; }
.shadstyle .shad02 { background: url($PREF{image_path}/shad02c.png); top: 0; right: 0; width: 12px; height: 100%; }
.shadstyle .shad03 { background: url($PREF{image_path}/shad03c.png); bottom: 0; left: 0; width: 100%; height: 12px; }
.shadstyle .shad04 { background: url($PREF{image_path}/shad04c.png); top: 0; left: 0; width: 12px; height: 100%; }
.shadstyle .shad05 { background: url($PREF{image_path}/shad05c.png); top: 0; left: 0; }
.shadstyle .shad06 { background: url($PREF{image_path}/shad06c.png); top: 0; right: 0; }
.shadstyle .shad07 { background: url($PREF{image_path}/shad07c.png); bottom: 0; right: 0; }
.shadstyle .shad08 { background: url($PREF{image_path}/shad08c.png); bottom: 0; left: 0; }
.shadstyle .shad01, .shadstyle .shad02, .shadstyle .shad03, .shadstyle .shad04 { position: absolute; z-index: -5; }
.shadstyle .shad05, .shadstyle .shad06, .shadstyle .shad07, .shadstyle .shad08 { position: absolute; background-color: #fff; width: 22px; height: 22px; z-index: -4; }


.enc_tbl
{
	border: 1px solid #777;
	margin: 10px auto;
}
.enc_tbl table
{
	border-collapse: separate;
	border-spacing: 0;
	border: 0;
	background: #fff;
	width: 100%;
	margin: 0;
	font-size: 8pt;
}
.enc_tbl table th
{
	padding: 9px;
	background: #507090;
	color: #fff;
}
.enc_tbl td.verthead
{
	padding: 9px;
	background: #507090;
	color: #fff;
	width: 50%;
}
.enc_tbl table th a, .enc_tbl td.verthead a
{
	color: #fff !important;
	text-decoration: none;
}
.enc_tbl table td a, .enc_tbl table td a:visited
{
	color: #000 !important;
	border: 0;
}
.enc_tbl table td
{
	padding: 7px;
	border-bottom: 1px solid #fff;
}
.enc_tbl table td.vertcell
{
	border-bottom: 1px solid #fff;
}
.enc_tbl table tr
{
	border-bottom: 1px solid #fff;
}
.enc_tbl table tr.odd
{
	padding: 4px;
	background: #f4f6f8;
	background: #f1f1f1;
	background: #efefef;
}
.enc_tbl table tr.even
{
	padding: 4px;
	background: #ffffff;
	background: #fafafa;
	background: #e9e9e9;
}
.enc_tbl table tr:hover
{
	background: #fcffb8;
	background: #d5d9d3;
}
.pagelinks span, .pagelinks a
{
	margin: 4px;
}
.enc_tbl input.text
{
	width: 200px !important;
	border: 1px solid #555;
	padding: 3px;
}
.enc_tbl textarea
{
	border: 1px solid #555;
	padding: 3px;
}
.enc_tbl textarea.shorttext
{
	width: 300px;
	height: 50px;
}
.enc_tbl textarea.mediumtext
{
	width: 300px;
	height: 80px;
}
.enc_tbl textarea.longtext
{
	width: 300px;
	height: 200px;
}
.enc_tbl .readonly
{
	margin-left: 5px;
}
#database_deleter
{
	margin: 30px 0;
	padding: 0;
}
.enc_create_tbl table
{
	/* width: auto; */
}
.enc_create_tbl th, .enc_create_tbl td,
.enc_edit_tbl th, .enc_edit_tbl td
{
	text-align: left;
}
.enc_create_tbl td.button, .enc_edit_tbl td.button
{
	text-align: center;
}


.encmenu { border: 1px solid #777; margin: 5px auto 20px auto; max-width: 400px; text-align: center; }
.encmenu a { display: block; padding: 5px; border: 0; color: #000 !important; border-top: 1px solid #fff; }
.encmenu a.odd { background: #efefef; }
.encmenu a.even { background: #e9e9e9; }
.encmenu a:visited { border: 0; border-top: 1px solid #fff; }
.encmenu a.first, .encmenu a.first:visited { border: 0; }
.encmenu a:hover { background: #d5d9d3; text-decoration: none; }
.encmenu .header { background: #507090; color: #fff; font: bold 8pt sans-serif; padding: 12px; }


</style>

<!--[if IE]>
<style type="text/css">
</style>
<![endif]-->

<!--[if lt IE 7]>
<style type="text/css">
.shadstyle .shad01, .shadstyle .shad02, .shadstyle .shad03, .shadstyle .shad04,
.shadstyle .shad05, .shadstyle .shad06, .shadstyle .shad07, .shadstyle .shad08 { display: none; }
</style>
<![endif]-->

<style type="text/css">

`;






############################################################################
# Here you can modify UserBase's login form template.
#
$PREF{login_form_template} =  qq`
%%special_message%%
<form method="post" action="$ENV{SCRIPT_NAME}?action=validate%%whence%%" id="ublogin" class="shadstyle">
<div class="shad01"></div><div class="shad02"></div><div class="shad03"></div><div class="shad04"></div>
<div class="shad05"></div><div class="shad06"></div><div class="shad07"></div><div class="shad08"></div>
<table>
	<tr class="header"><th colspan="2">
	<div class="origtitle"><span class="altcolor1">&gt;</span> UserBase: <span class="altcolor2">Login</span></div>
	<div class="graytitle"><div class="formtitle">UserBase</div><div class="formsubtitle">Login</div></div>
	</th></tr>

	<tr class="odd">
	<td class="label">Username:</td>
	<td class="field"><input type="text" class="default text" name="%PREF{userbase_user_fieldname}" id="ubun" maxlength="4" /></td>
	</tr>

	<tr class="even">
	<td class="label">Password:</td>
	<td class="field"><input type="password" class="default text" name="%PREF{userbase_pass_fieldname}" maxlength="4" /></td>
	</tr>

	%%%if-restrictip%%%
	<tr class="even">
	<td colspan="2"><input type="checkbox" name="restrict_ip" id="ub_restrict_ip" />
	<label for="ub_restrict_ip">Use extra security (<a href="#" onclick="alert('Restricts your session to your IP address.'); return false">explain</a>)</label>
	</td>
	</tr>
	%%%end-restrictip%%%

	<tr class="odd">
	<td colspan="2" class="ubbutton"><input type="hidden" name="ref" value="$ENV{HTTP_REFERER}" />
	<input type="submit" value="Login" class="defaultbutton" /></td>
	</tr>
</table>
</form>
`;








############################################################################
# Here you can modify UserBase's login/logout link template; this is the
# link that is displayed when ?format=justlink is passed on the URL.
#
$PREF{login_logout_link_template___login}		=  qq`<a href="%PREF{login_url}">Login</a>`;
$PREF{login_logout_link_template___logout}		=  qq`<a href="%ENV{SCRIPT_NAME}?logout">Logout</a>`;








############################################################################
# Here you can modify UserBase's mini login form template; this version
# of the login form is displayed when ?format=mini is passed on the URL.
# You can also specify the "mainmenu" text, which appears in place of the
# mini login form when the user is already logged in.
#
$PREF{login_form_template__mini} =  qq`
<form method="post" action="$ENV{SCRIPT_NAME}?format=mini&amp;action=validate%%whence%%" id="ubloginmini">
<span style="font-family: monospace;">Username:</span>
<input type="text" class="default text" name="%PREF{userbase_user_fieldname}" id="ubun" />

<br /><span style="font-family: monospace;">Password:</span>
<input type="password" class="default text" name="%PREF{userbase_pass_fieldname}" />

%%%if-restrictip%%%
<br /><input type="checkbox" name="restrict_ip" />Use extra security (<span class="def" title="restricts your session to your IP address">explain</span>)
%%%end-restrictip%%%

<input type="hidden" name="ref" value="$ENV{HTTP_REFERER}" />

<br /><input type="submit" value="Login" class="defaultbutton" />

</form>
`;



$PREF{mainmenu_template__mini} = qq`
<div>User %%username%% logged in &#8211; 
<a href="$PREF{login_url}">Options</a> &#8211; 
<a href="$ENV{SCRIPT_NAME}?logout">Logout</a></div>
`;











############################################################################
# Here you can modify UserBase's signup/adduser/edituser form template.
# This single form functions as the signup form, the edit-account form,
# and the administrator's add-new-user form, so keep that in mind when
# editing the template.  You can move sections around and edit the
# sections, but in most cases it's best to avoid deleting entire sections.
#
$PREF{user_form_title___user_signing_up}	= qq`Create New Account`;
$PREF{user_form_title___admin_adding_user}	= qq`Add New User`;
$PREF{user_form_title___editing_account}	= qq`Edit Account Information`;
$PREF{user_form_template}			=  qq`

%%%if-forcepwchng%%%
<p style="text-align: center;">You must change your password now.</p>
%%%end-forcepwchng%%%

<form method="post" action="%%post_url%%" class="user" id="userform" onsubmit="return startupload()">
%%hidden_signup_input%%

<table>

	<tr class="header"><th colspan="2"><span class="altcolor1">&gt;</span> UserBase: 
	<span class="altcolor2">
	%%%if-user_signing_up%%%	Create New Account		%%%end-user_signing_up%%%
	%%%if-admin_adding_user%%%	Add New User			%%%end-admin_adding_user%%%
	%%%if-editing_account%%%	Edit Account Information	%%%end-editing_account%%%
	</span>
	</th>
	</tr>


	<tr>
	<td class="label">Username:</td>
	<td><input type="text" name="username" class="default text required %%emailformat%%" maxlength="%PREF{max_username_length}" value="%%username%%" %%username_readonly%% /></td>
	</tr>


	%%%if-use_builtin_realname_field%%%
		<tr>
		<td class="label">Real Name:</td>
		<td><input type="text" name="realname" class="default text required" maxlength="%PREF{max_realname_length}" value="%%realname%%" /></td>
		</tr>
	%%%end-use_builtin_realname_field%%%


	%%%if-use_builtin_email_field%%%
		<tr>
		<td class="label">$PREF{email_label}:</td>
		<td><input type="text" name="email" class="default text %%email_field_required%%" maxlength="%PREF{max_emailaddr_length}" value="%%email%%" /></td>
		</tr>
	%%%end-use_builtin_email_field%%%


	%%%if-currentpass_needed%%%
		<tr>
		<td class="label">Current Password<br />(only if changing):</td>
		<td><input type="password" name="oldpw" class="default text" maxlength="%PREF{max_password_length}" /></td>
		</tr>
	%%%end-currentpass_needed%%%


	<tr>
	<td class="label">
	%%%ifelse-editing_account%%% New Password: %%%else%%% Password: %%%endelse-editing_account%%%
	</td>
	<td><input type="password" name="pw1" id="ubpw1" class="default text %%new_password_required%%" maxlength="%PREF{max_password_length}" /></td>
	</tr>


	<tr>
	<td class="label">
	%%%ifelse-editing_account%%% New Password, Again: %%%else%%% Password, Again: %%%endelse-editing_account%%%
	</td>
	<td><input type="password" name="pw2" id="ubpw2" class="default text %%new_password_required%%" maxlength="%PREF{max_password_length}" /></td>


	%%%if-show_account_locks%%%
		<tr>
		<td class="label">
			Account Locked <span style="font-weight: normal;">(this is the <br />"too many failed logins" lock;

			%%%ifelse-lock_expires_automatically%%%
				it <br />auto-unlocks after %PREF{failed_logins_within_N_secs_count_towards_lock} seconds)</span>:
			%%%else%%%
				it <br />requires manual unlocking by an <br />admin here)</span>:
			%%%endelse-lock_expires_automatically%%%
		</td>
		<td><input type="checkbox" name="account_locked" %%account_locked_checked%% /></td>
		</tr>

		<tr>
		<td class="label">Account Disabled <span style="font-weight: normal;">(this can only <br />be changed here, by an admin)</span>:</td>
		<td><input type="checkbox" name="account_disabled" %%account_disabled_checked%% /></td>
		</tr>
	%%%end-show_account_locks%%%


	%%%if-show_force_pwchng%%%
		<tr>
		<td class="label">Force Password Change:</td>
		<td><input type="checkbox" name="forcepwchng" %%forcepwchng_checked%% /></td>
		</tr>
	%%%end-show_force_pwchng%%%


	%%%if-show_terms_of_service%%%
	<tr>
	<td class="label">
		<p>Terms of Use:</p>
		<p>By signing up for an account, you agree not to do anything bad to our site, blah blah blah...</p>
	</td>
	<td><input type="checkbox" name="agreetoterms" id="agreetoterms" /></td>
	</tr>
	%%%end-show_terms_of_service%%%


	%%%if-show_grouplist%%%
	<tr>
	<td class="label" style="vertical-align: top;">Group Memberships:</td>
	<td class="groups">
		%%%template:grouplist%%%
		<input type="checkbox" name="group-%%group%%" id="group-%%group%%" %%checked%% %%disabled%% />
		<label for="group-%%group%%">%%group_label%%</label>
		<br /><br />
		%%%end-template:grouplist%%%
	</td>
	</tr>
	%%%end-show_grouplist%%%


	%%%if-show_payment_options%%%
	<tr>
	<td class="label">Premium Accounts:</td>
	<td class="paidaccts">
		<input type="radio" name="paidacct" id="paidacct00" value="00" checked="checked" /><label for="paidacct00">No thanks.</label>
		<br /><br />
		<input type="radio" name="paidacct" id="paidacct01" value="01" /><label for="paidacct01">%%paidacct01name%%: %%paidacct01desc%% (\$%%paidacct01cost%%)</label>
		<br /><br />
		<input type="radio" name="paidacct" id="paidacct02" value="02" /><label for="paidacct02">%%paidacct02name%%: %%paidacct02desc%% (\$%%paidacct02cost%%)</label>
		<br /><br />
		<input type="radio" name="paidacct" id="paidacct03" value="03" /><label for="paidacct03">%%paidacct03name%%: %%paidacct03desc%% (\$%%paidacct03cost%%)</label>
		<br /><br />
	</td>
	</tr>
	%%%end-show_payment_options%%%


	%%%if-show_customfields%%%
	%%%template:customfields%%%
	<tr>
	<td class="label" id="ub_%%fieldname%%_label">
		%%fieldlabel%%
	</td>
	<td id="ub_%%fieldname%%_field">

		%%%if-freeformsingle%%%
			<input type="text" name="%%fieldname%%" maxlength="%%fieldmax%%" class="default text %%required%%" value="%%value%%" />
		%%%end-freeformsingle%%%

		%%%if-freeformmulti%%%
			<textarea name="%%fieldname%%" class="default text %%required%%">%%value%%</textarea>
		%%%end-freeformmulti%%%

		%%%if-dropdown%%%
			<select name="%%fieldname%%" class="default text %%required%%">
				%%%if-mandatory%%%
					<option value=""></option>
				%%%end-mandatory%%%
				%%%template:dropdown%%%
					<option value="%%option%%" %%dropdown_selected%%>%%option%%</option>
				%%%end-template:dropdown%%%
			</select>
		%%%end-dropdown%%%

		%%%if-checkbox%%%
			<input type="checkbox" name="%%fieldname%%" class="checkbox" %%checkbox_checked%% />
		%%%end-checkbox%%%

		%%%if-radio%%%
			%%%template:radio%%%
				<input type="radio" name="%%fieldname%%" id="cust-radio-%%radio_i%%" class="%%required%%" value="%%selection%%" %%radio_checked%% />
				<label for="cust-radio-%%radio_i%%">%%selection%%</label>
				<br />
			%%%end-template:radio%%%
		%%%end-radio%%%

	</td>
	</tr>
	%%%end-template:customfields%%%
	%%%end-show_customfields%%%


	<tr>
		<td colspan="2" class="ubbutton">
		<input type="hidden" name="userid" value="%%user_id%%" />
		<input type="button" value="%%%if-user_signing_up%%%Sign Up%%%end-user_signing_up%%%%%%if-admin_adding_user%%%Add User%%%end-admin_adding_user%%%%%%if-editing_account%%%Modify User%%%end-editing_account%%%" class="defaultbutton" onclick="submit_user_form()" />
		</td>
	</tr>

</table>
</form>

`;









############################################################################
# This template is for the PayPal BuyNow button, used for letting your users
# sign up for paid accounts.
#
$PREF{paid_account_payment_page_title} = qq`Checkout`;
$PREF{paid_account_payment_page_template} = qq`
<fieldset id="payment-page">
<legend>Item:</legend>
<div><b>%%item_name%%</b>: \$%%item_cost%%</div>
<form name="_xclick" action="https://www.paypal.com/us/cgi-bin/webscr" method="post">
<input type="hidden" name="cmd" value="_xclick">
<input type="hidden" name="notify_url" value="%PREF{protoprefix}$ENV{HTTP_HOST}$ENV{SCRIPT_NAME}">
<input type="hidden" name="business" value="%PREF{email_address_for_paypal_payments}">
<input type="hidden" name="currency_code" value="USD">
<input type="hidden" name="no_shipping" value="1">
<input type="hidden" name="return" value="%PREF{protoprefix}$ENV{HTTP_HOST}%PREF{login_url}?action=confirmpayment">
<input type="hidden" name="cancel_return" value="%PREF{protoprefix}$ENV{HTTP_HOST}%PREF{login_url}">
<input type="hidden" name="on0" value="UserID">
<input type="hidden" name="os0" value="%%userid%%">
<input type="hidden" name="item_name" value="%%item_name%%">
<input type="hidden" name="item_number" value="%%item_number%%">
<input type="hidden" name="amount" value="%%item_cost%%">
<input type="image" src="http://www.paypal.com/en_US/i/btn/btn_buynow_SM.gif" border="0" name="submit" alt="Make payments with PayPal - it's fast, free and secure!">
</form>
<div>All major credit cards accepted. <br />PayPal account <b>not</b> required.</div>
</fieldset>
<img src="$PREF{image_path}/paypal_horizontal_solution_PP.gif" alt="Credit Card Payments Via PayPal" />
`;


$PREF{confirm_payment_page_title} = qq`Thank You`;
$PREF{confirm_payment_page_template} = qq`
<p>
Thanks for your payment.&nbsp; You will receive a notification email
shortly.&nbsp; You may <a href="%PREF{login_url}">click here</a> to login.
</p>
`;

